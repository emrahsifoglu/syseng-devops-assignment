---
- hosts: localhost
  gather_facts: false
  connection: local
  tasks:
  - name: "Install jmespath python package"
    pip:
      name: jmespath
      state: present
  - name: "Install kubernetes python package"
    pip:
      name: kubernetes
      state: present
  - name: "Check if default namespace exists"
    k8s:
      name: default
      api_version: v1
      kind: Namespace
      state: present
  - name: "Deploy a MySQL database server"
    k8s:
      definition: "{{ lookup('template', '{{ item }}') | from_yaml }}"
      namespace: default
      state: present
    with_fileglob:
      - "./manifests/mysql/mysql-pv.yml"
      - "./manifests/mysql/mysql-pvc.yml"
      - "./manifests/mysql/mysql-config.yml"
      - "./manifests/mysql/mysql-initdb-config.yml"
      - "./manifests/mysql/mysql-secrets.yml"
      - "./manifests/mysql/mysql-deployment.yml"
      - "./manifests/mysql/mysql-svc.yml"
  - name: "Deploy Adminer"
    k8s:
      definition: "{{ lookup('template', '{{ item }}') | from_yaml }}"
      namespace: default
      state: present
    with_fileglob:
      - "./manifests/adminer/adminer-deployment.yml"
      - "./manifests/adminer/adminer-svc.yml"
  - name: Get Adminer service
    k8s:
      api_version: v1
      kind: Service
      name: adminer-svc
      namespace: default
    register: adminer_svc
  - name: Adminer
    debug:
      msg: "http://{{ adminer_svc | json_query('result.status.loadBalancer.ingress[0].ip')}}:{{ adminer_svc | json_query('result.spec.ports[0].port')}}"
  - name: "Deploy Flask application"
    k8s:
      definition: "{{ lookup('template', '{{ item }}') | from_yaml }}"
      namespace: default
      state: present
    with_fileglob:
      - "./manifests/app/app-secrets.yml"
      - "./manifests/app/app-deployment.yml"
      - "./manifests/app/app-svc.yml"
  - name: Get application service
    k8s:
      api_version: v1
      kind: Service
      name: flask-app-svc
      namespace: default
    register: flask_app_svc
  - name: Flask application
    debug:
      msg: "http://{{ flask_app_svc | json_query('result.status.loadBalancer.ingress[0].ip')}}:{{ flask_app_svc | json_query('result.spec.ports[0].port')}}"